.global _start

.section .text
  mov $rich, %rax
  cmpl $1, (%rax)
  jne bad_exit
  
  movq $60, %rax
  movq $0, %rdi
  syscall

bad_exit:
  movq $60, %rax
  movq $1, %rdi
  syscall

.section .data
root:
    .quad a, f, n, z, 0
a:
    .quad b, 0
b:
    .quad c, 0
c:
    .quad d, y, 0
d:
    .quad e, 0
e:
    .quad 0
f:
    .quad g, m, 0
g:
    .quad h, 0
h:
    .quad i, j, k, 0
i: 
    .quad 0
j:
    .quad 0
k:
    .quad l, 0
l:
    .quad 0
m:
    .quad 0
n:
    .quad o, 0
o:
    .quad p, 0
p:
    .quad q, s, t, 0
q:
    .quad u, v, w, 0
s:
    .quad x, 0
t:
    .quad 0
u:
    .quad 0
v: 
    .quad 0
w:
    .quad 0
x:
    .quad 0
y:
    .quad 0
z:
    .quad 0


rich:
    .byte 0

